[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "autonity"
description = "Python library for interacting with Autonity"
readme = "README.md"
license = "MIT"
keywords = ["autonity", "web3", "rpc", "client", "library"]
dynamic = ["version"]
requires-python = ">=3.8"
dependencies = ["typing-extensions", "web3==6.14.0"]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.urls]
Homepage = "https://github.com/autonity/autonity.py"
Source = "https://github.com/autonity/autonity.py"
Issues = "https://github.com/autonity/autonity.py/issues"
Changes = "https://github.com/autonity/autonity.py/blob/master/CHANGELOG.md"

[tool.hatch.build]
include = ["autonity/**"]

[tool.hatch.version]
path = "autonity/__version__.py"

[tool.hatch.envs.test]
dependencies = ["mypy", "python-dotenv"]

[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.test.scripts]
main = "python -m unittest discover {args:tests}"
types = "mypy {args:.}"
all = ["main", "types"]

[tool.hatch.envs.lint]
detached = true
dependencies = ["black", "ruff"]

[tool.hatch.envs.lint.scripts]
check = ["ruff check {args:.}", "black --check {args:.}"]
format = ["black {args:.}", "ruff check --fix --select I {args:.}"]

[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
exclude = "tests/archive"
scripts_are_modules = true
strict_optional = true

[[tool.mypy.overrides]]
ignore_missing_imports = false
module = ["requests.*", "six"]
