# Generated by pyabigen 0.2.1

import enum
import typing

import eth_typing
import hexbytes
import web3
from web3.contract import contract

__version__ = "v0.14.0"

ADDRESS = typing.cast(
    eth_typing.ChecksumAddress, "0xBd770416a3345F91E4B34576cb804a576fa48EB1"
)


class ValidatorState(enum.IntEnum):
    """See `enum ValidatorState` on the Autonity contract."""

    ACTIVE = 0
    PAUSED = 1
    JAILED = 2
    JAILBOUND = 3


class UnbondingReleaseState(enum.IntEnum):
    """See `enum UnbondingReleaseState` on the Autonity contract."""

    NOT_RELEASED = 0
    RELEASED = 1
    REJECTED = 2
    REVERTED = 3


class Validator(typing.NamedTuple):
    """See `struct Validator` on the Autonity contract."""

    treasury: eth_typing.ChecksumAddress
    node_address: eth_typing.ChecksumAddress
    oracle_address: eth_typing.ChecksumAddress
    enode: str
    commission_rate: int
    bonded_stake: int
    unbonding_stake: int
    unbonding_shares: int
    self_bonded_stake: int
    self_unbonding_stake: int
    self_unbonding_shares: int
    self_unbonding_stake_locked: int
    liquid_contract: eth_typing.ChecksumAddress
    liquid_supply: int
    registration_block: int
    total_slashed: int
    jail_release_block: int
    provable_fault_count: int
    consensus_key: hexbytes.HexBytes
    state: ValidatorState


class Policy(typing.NamedTuple):
    """See `struct Policy` on the Autonity contract."""

    treasury_fee: int
    min_base_fee: int
    delegation_rate: int
    unbonding_period: int
    initial_inflation_reserve: int
    treasury_account: eth_typing.ChecksumAddress


class Contracts(typing.NamedTuple):
    """See `struct Contracts` on the Autonity contract."""

    accountability_contract: eth_typing.ChecksumAddress
    oracle_contract: eth_typing.ChecksumAddress
    acu_contract: eth_typing.ChecksumAddress
    supply_control_contract: eth_typing.ChecksumAddress
    stabilization_contract: eth_typing.ChecksumAddress
    upgrade_manager_contract: eth_typing.ChecksumAddress
    inflation_controller_contract: eth_typing.ChecksumAddress
    non_stakable_vesting_contract: eth_typing.ChecksumAddress


class Protocol(typing.NamedTuple):
    """See `struct Protocol` on the Autonity contract."""

    operator_account: eth_typing.ChecksumAddress
    epoch_period: int
    block_period: int
    committee_size: int


class Config(typing.NamedTuple):
    """See `struct Config` on the Autonity contract."""

    policy: Policy
    contracts: Contracts
    protocol: Protocol
    contract_version: int


class CommitteeMember(typing.NamedTuple):
    """See `struct CommitteeMember` on the Autonity contract."""

    addr: eth_typing.ChecksumAddress
    voting_power: int
    consensus_key: hexbytes.HexBytes


class Autonity:
    """Autonity contract wrapper."""

    _contract: contract.Contract

    def __init__(
        self,
        w3: web3.Web3,
    ):
        self._contract = w3.eth.contract(
            address=ADDRESS,
            abi=abi,
        )

    def commission_rate_precision(
        self,
    ) -> int:
        """See `COMMISSION_RATE_PRECISION` on the Autonity contract."""
        return_value = self._contract.functions.COMMISSION_RATE_PRECISION().call()
        return int(return_value)

    def activate_validator(
        self,
        _address: eth_typing.ChecksumAddress,
    ) -> contract.ContractFunction:
        """See `activateValidator` on the Autonity contract."""
        return self._contract.functions.activateValidator(
            _address,
        )

    def allowance(
        self,
        owner: eth_typing.ChecksumAddress,
        spender: eth_typing.ChecksumAddress,
    ) -> int:
        """See `allowance` on the Autonity contract."""
        return_value = self._contract.functions.allowance(
            owner,
            spender,
        ).call()
        return int(return_value)

    def approve(
        self,
        spender: eth_typing.ChecksumAddress,
        amount: int,
    ) -> contract.ContractFunction:
        """See `approve` on the Autonity contract."""
        return self._contract.functions.approve(
            spender,
            amount,
        )

    def atn_total_redistributed(
        self,
    ) -> int:
        """See `atnTotalRedistributed` on the Autonity contract."""
        return_value = self._contract.functions.atnTotalRedistributed().call()
        return int(return_value)

    def balance_of(
        self,
        _addr: eth_typing.ChecksumAddress,
    ) -> int:
        """See `balanceOf` on the Autonity contract."""
        return_value = self._contract.functions.balanceOf(
            _addr,
        ).call()
        return int(return_value)

    def bond(
        self,
        _validator: eth_typing.ChecksumAddress,
        _amount: int,
    ) -> contract.ContractFunction:
        """See `bond` on the Autonity contract."""
        return self._contract.functions.bond(
            _validator,
            _amount,
        )

    def burn(
        self,
        _addr: eth_typing.ChecksumAddress,
        _amount: int,
    ) -> contract.ContractFunction:
        """See `burn` on the Autonity contract."""
        return self._contract.functions.burn(
            _addr,
            _amount,
        )

    def change_commission_rate(
        self,
        _validator: eth_typing.ChecksumAddress,
        _rate: int,
    ) -> contract.ContractFunction:
        """See `changeCommissionRate` on the Autonity contract."""
        return self._contract.functions.changeCommissionRate(
            _validator,
            _rate,
        )

    def complete_contract_upgrade(
        self,
    ) -> contract.ContractFunction:
        """See `completeContractUpgrade` on the Autonity contract."""
        return self._contract.functions.completeContractUpgrade()

    def config(
        self,
    ) -> Config:
        """See `config` on the Autonity contract."""
        return_value = self._contract.functions.config().call()
        return Config(
            Policy(
                int(return_value[0][0]),
                int(return_value[0][1]),
                int(return_value[0][2]),
                int(return_value[0][3]),
                int(return_value[0][4]),
                eth_typing.ChecksumAddress(return_value[0][5]),
            ),
            Contracts(
                eth_typing.ChecksumAddress(return_value[1][0]),
                eth_typing.ChecksumAddress(return_value[1][1]),
                eth_typing.ChecksumAddress(return_value[1][2]),
                eth_typing.ChecksumAddress(return_value[1][3]),
                eth_typing.ChecksumAddress(return_value[1][4]),
                eth_typing.ChecksumAddress(return_value[1][5]),
                eth_typing.ChecksumAddress(return_value[1][6]),
                eth_typing.ChecksumAddress(return_value[1][7]),
            ),
            Protocol(
                eth_typing.ChecksumAddress(return_value[2][0]),
                int(return_value[2][1]),
                int(return_value[2][2]),
                int(return_value[2][3]),
            ),
            int(return_value[3]),
        )

    def decimals(
        self,
    ) -> int:
        """See `decimals` on the Autonity contract."""
        return_value = self._contract.functions.decimals().call()
        return int(return_value)

    def deployer(
        self,
    ) -> eth_typing.ChecksumAddress:
        """See `deployer` on the Autonity contract."""
        return_value = self._contract.functions.deployer().call()
        return eth_typing.ChecksumAddress(return_value)

    def epoch_id(
        self,
    ) -> int:
        """See `epochID` on the Autonity contract."""
        return_value = self._contract.functions.epochID().call()
        return int(return_value)

    def epoch_reward(
        self,
    ) -> int:
        """See `epochReward` on the Autonity contract."""
        return_value = self._contract.functions.epochReward().call()
        return int(return_value)

    def epoch_total_bonded_stake(
        self,
    ) -> int:
        """See `epochTotalBondedStake` on the Autonity contract."""
        return_value = self._contract.functions.epochTotalBondedStake().call()
        return int(return_value)

    def get_block_period(
        self,
    ) -> int:
        """See `getBlockPeriod` on the Autonity contract."""
        return_value = self._contract.functions.getBlockPeriod().call()
        return int(return_value)

    def get_committee(
        self,
    ) -> typing.List[CommitteeMember]:
        """See `getCommittee` on the Autonity contract."""
        return_value = self._contract.functions.getCommittee().call()
        return [
            CommitteeMember(
                eth_typing.ChecksumAddress(elem[0]),
                int(elem[1]),
                hexbytes.HexBytes(elem[2]),
            )
            for elem in return_value
        ]

    def get_committee_enodes(
        self,
    ) -> typing.List[str]:
        """See `getCommitteeEnodes` on the Autonity contract."""
        return_value = self._contract.functions.getCommitteeEnodes().call()
        return [str(elem) for elem in return_value]

    def get_epoch_from_block(
        self,
        _block: int,
    ) -> int:
        """See `getEpochFromBlock` on the Autonity contract."""
        return_value = self._contract.functions.getEpochFromBlock(
            _block,
        ).call()
        return int(return_value)

    def get_epoch_period(
        self,
    ) -> int:
        """See `getEpochPeriod` on the Autonity contract."""
        return_value = self._contract.functions.getEpochPeriod().call()
        return int(return_value)

    def get_last_epoch_block(
        self,
    ) -> int:
        """See `getLastEpochBlock` on the Autonity contract."""
        return_value = self._contract.functions.getLastEpochBlock().call()
        return int(return_value)

    def get_max_committee_size(
        self,
    ) -> int:
        """See `getMaxCommitteeSize` on the Autonity contract."""
        return_value = self._contract.functions.getMaxCommitteeSize().call()
        return int(return_value)

    def get_minimum_base_fee(
        self,
    ) -> int:
        """See `getMinimumBaseFee` on the Autonity contract."""
        return_value = self._contract.functions.getMinimumBaseFee().call()
        return int(return_value)

    def get_new_contract(
        self,
    ) -> typing.Tuple[hexbytes.HexBytes, str]:
        """See `getNewContract` on the Autonity contract."""
        return_value = self._contract.functions.getNewContract().call()
        return (
            hexbytes.HexBytes(return_value[0]),
            str(return_value[1]),
        )

    def get_operator(
        self,
    ) -> eth_typing.ChecksumAddress:
        """See `getOperator` on the Autonity contract."""
        return_value = self._contract.functions.getOperator().call()
        return eth_typing.ChecksumAddress(return_value)

    def get_oracle(
        self,
    ) -> eth_typing.ChecksumAddress:
        """See `getOracle` on the Autonity contract."""
        return_value = self._contract.functions.getOracle().call()
        return eth_typing.ChecksumAddress(return_value)

    def get_proposer(
        self,
        height: int,
        round: int,
    ) -> eth_typing.ChecksumAddress:
        """See `getProposer` on the Autonity contract."""
        return_value = self._contract.functions.getProposer(
            height,
            round,
        ).call()
        return eth_typing.ChecksumAddress(return_value)

    def get_reverting_amount(
        self,
        _unbonding_id: int,
    ) -> int:
        """See `getRevertingAmount` on the Autonity contract."""
        return_value = self._contract.functions.getRevertingAmount(
            _unbonding_id,
        ).call()
        return int(return_value)

    def get_treasury_account(
        self,
    ) -> eth_typing.ChecksumAddress:
        """See `getTreasuryAccount` on the Autonity contract."""
        return_value = self._contract.functions.getTreasuryAccount().call()
        return eth_typing.ChecksumAddress(return_value)

    def get_treasury_fee(
        self,
    ) -> int:
        """See `getTreasuryFee` on the Autonity contract."""
        return_value = self._contract.functions.getTreasuryFee().call()
        return int(return_value)

    def get_unbonding_period(
        self,
    ) -> int:
        """See `getUnbondingPeriod` on the Autonity contract."""
        return_value = self._contract.functions.getUnbondingPeriod().call()
        return int(return_value)

    def get_unbonding_release_state(
        self,
        _unbonding_id: int,
    ) -> UnbondingReleaseState:
        """See `getUnbondingReleaseState` on the Autonity contract."""
        return_value = self._contract.functions.getUnbondingReleaseState(
            _unbonding_id,
        ).call()
        return UnbondingReleaseState(return_value)

    def get_validator(
        self,
        _addr: eth_typing.ChecksumAddress,
    ) -> Validator:
        """See `getValidator` on the Autonity contract."""
        return_value = self._contract.functions.getValidator(
            _addr,
        ).call()
        return Validator(
            eth_typing.ChecksumAddress(return_value[0]),
            eth_typing.ChecksumAddress(return_value[1]),
            eth_typing.ChecksumAddress(return_value[2]),
            str(return_value[3]),
            int(return_value[4]),
            int(return_value[5]),
            int(return_value[6]),
            int(return_value[7]),
            int(return_value[8]),
            int(return_value[9]),
            int(return_value[10]),
            int(return_value[11]),
            eth_typing.ChecksumAddress(return_value[12]),
            int(return_value[13]),
            int(return_value[14]),
            int(return_value[15]),
            int(return_value[16]),
            int(return_value[17]),
            hexbytes.HexBytes(return_value[18]),
            ValidatorState(return_value[19]),
        )

    def get_validators(
        self,
    ) -> typing.List[eth_typing.ChecksumAddress]:
        """See `getValidators` on the Autonity contract."""
        return_value = self._contract.functions.getValidators().call()
        return [eth_typing.ChecksumAddress(elem) for elem in return_value]

    def get_version(
        self,
    ) -> int:
        """See `getVersion` on the Autonity contract."""
        return_value = self._contract.functions.getVersion().call()
        return int(return_value)

    def inflation_reserve(
        self,
    ) -> int:
        """See `inflationReserve` on the Autonity contract."""
        return_value = self._contract.functions.inflationReserve().call()
        return int(return_value)

    def last_epoch_block(
        self,
    ) -> int:
        """See `lastEpochBlock` on the Autonity contract."""
        return_value = self._contract.functions.lastEpochBlock().call()
        return int(return_value)

    def last_epoch_time(
        self,
    ) -> int:
        """See `lastEpochTime` on the Autonity contract."""
        return_value = self._contract.functions.lastEpochTime().call()
        return int(return_value)

    def max_bond_applied_gas(
        self,
    ) -> int:
        """See `maxBondAppliedGas` on the Autonity contract."""
        return_value = self._contract.functions.maxBondAppliedGas().call()
        return int(return_value)

    def max_rewards_distribution_gas(
        self,
    ) -> int:
        """See `maxRewardsDistributionGas` on the Autonity contract."""
        return_value = self._contract.functions.maxRewardsDistributionGas().call()
        return int(return_value)

    def max_unbond_applied_gas(
        self,
    ) -> int:
        """See `maxUnbondAppliedGas` on the Autonity contract."""
        return_value = self._contract.functions.maxUnbondAppliedGas().call()
        return int(return_value)

    def max_unbond_released_gas(
        self,
    ) -> int:
        """See `maxUnbondReleasedGas` on the Autonity contract."""
        return_value = self._contract.functions.maxUnbondReleasedGas().call()
        return int(return_value)

    def mint(
        self,
        _addr: eth_typing.ChecksumAddress,
        _amount: int,
    ) -> contract.ContractFunction:
        """See `mint` on the Autonity contract."""
        return self._contract.functions.mint(
            _addr,
            _amount,
        )

    def name(
        self,
    ) -> str:
        """See `name` on the Autonity contract."""
        return_value = self._contract.functions.name().call()
        return str(return_value)

    def pause_validator(
        self,
        _address: eth_typing.ChecksumAddress,
    ) -> contract.ContractFunction:
        """See `pauseValidator` on the Autonity contract."""
        return self._contract.functions.pauseValidator(
            _address,
        )

    def receive_atn(
        self,
    ) -> contract.ContractFunction:
        """See `receiveATN` on the Autonity contract."""
        return self._contract.functions.receiveATN()

    def register_validator(
        self,
        _enode: str,
        _oracle_address: eth_typing.ChecksumAddress,
        _consensus_key: hexbytes.HexBytes,
        _signatures: hexbytes.HexBytes,
    ) -> contract.ContractFunction:
        """See `registerValidator` on the Autonity contract."""
        return self._contract.functions.registerValidator(
            _enode,
            _oracle_address,
            _consensus_key,
            _signatures,
        )

    def reset_contract_upgrade(
        self,
    ) -> contract.ContractFunction:
        """See `resetContractUpgrade` on the Autonity contract."""
        return self._contract.functions.resetContractUpgrade()

    def set_accountability_contract(
        self,
        _address: eth_typing.ChecksumAddress,
    ) -> contract.ContractFunction:
        """See `setAccountabilityContract` on the Autonity contract."""
        return self._contract.functions.setAccountabilityContract(
            _address,
        )

    def set_acu_contract(
        self,
        _address: eth_typing.ChecksumAddress,
    ) -> contract.ContractFunction:
        """See `setAcuContract` on the Autonity contract."""
        return self._contract.functions.setAcuContract(
            _address,
        )

    def set_committee_size(
        self,
        _size: int,
    ) -> contract.ContractFunction:
        """See `setCommitteeSize` on the Autonity contract."""
        return self._contract.functions.setCommitteeSize(
            _size,
        )

    def set_epoch_period(
        self,
        _period: int,
    ) -> contract.ContractFunction:
        """See `setEpochPeriod` on the Autonity contract."""
        return self._contract.functions.setEpochPeriod(
            _period,
        )

    def set_inflation_controller_contract(
        self,
        _address: eth_typing.ChecksumAddress,
    ) -> contract.ContractFunction:
        """See `setInflationControllerContract` on the Autonity contract."""
        return self._contract.functions.setInflationControllerContract(
            _address,
        )

    def set_max_bond_applied_gas(
        self,
        _gas: int,
    ) -> contract.ContractFunction:
        """See `setMaxBondAppliedGas` on the Autonity contract."""
        return self._contract.functions.setMaxBondAppliedGas(
            _gas,
        )

    def set_max_rewards_distribution_gas(
        self,
        _gas: int,
    ) -> contract.ContractFunction:
        """See `setMaxRewardsDistributionGas` on the Autonity contract."""
        return self._contract.functions.setMaxRewardsDistributionGas(
            _gas,
        )

    def set_max_unbond_applied_gas(
        self,
        _gas: int,
    ) -> contract.ContractFunction:
        """See `setMaxUnbondAppliedGas` on the Autonity contract."""
        return self._contract.functions.setMaxUnbondAppliedGas(
            _gas,
        )

    def set_max_unbond_released_gas(
        self,
        _gas: int,
    ) -> contract.ContractFunction:
        """See `setMaxUnbondReleasedGas` on the Autonity contract."""
        return self._contract.functions.setMaxUnbondReleasedGas(
            _gas,
        )

    def set_minimum_base_fee(
        self,
        _price: int,
    ) -> contract.ContractFunction:
        """See `setMinimumBaseFee` on the Autonity contract."""
        return self._contract.functions.setMinimumBaseFee(
            _price,
        )

    def set_non_stakable_vesting_contract(
        self,
        _address: eth_typing.ChecksumAddress,
    ) -> contract.ContractFunction:
        """See `setNonStakableVestingContract` on the Autonity contract."""
        return self._contract.functions.setNonStakableVestingContract(
            _address,
        )

    def set_operator_account(
        self,
        _account: eth_typing.ChecksumAddress,
    ) -> contract.ContractFunction:
        """See `setOperatorAccount` on the Autonity contract."""
        return self._contract.functions.setOperatorAccount(
            _account,
        )

    def set_oracle_contract(
        self,
        _address: eth_typing.ChecksumAddress,
    ) -> contract.ContractFunction:
        """See `setOracleContract` on the Autonity contract."""
        return self._contract.functions.setOracleContract(
            _address,
        )

    def set_stabilization_contract(
        self,
        _address: eth_typing.ChecksumAddress,
    ) -> contract.ContractFunction:
        """See `setStabilizationContract` on the Autonity contract."""
        return self._contract.functions.setStabilizationContract(
            _address,
        )

    def set_staking_gas_price(
        self,
        _price: int,
    ) -> contract.ContractFunction:
        """See `setStakingGasPrice` on the Autonity contract."""
        return self._contract.functions.setStakingGasPrice(
            _price,
        )

    def set_supply_control_contract(
        self,
        _address: eth_typing.ChecksumAddress,
    ) -> contract.ContractFunction:
        """See `setSupplyControlContract` on the Autonity contract."""
        return self._contract.functions.setSupplyControlContract(
            _address,
        )

    def set_treasury_account(
        self,
        _account: eth_typing.ChecksumAddress,
    ) -> contract.ContractFunction:
        """See `setTreasuryAccount` on the Autonity contract."""
        return self._contract.functions.setTreasuryAccount(
            _account,
        )

    def set_treasury_fee(
        self,
        _treasury_fee: int,
    ) -> contract.ContractFunction:
        """See `setTreasuryFee` on the Autonity contract."""
        return self._contract.functions.setTreasuryFee(
            _treasury_fee,
        )

    def set_unbonding_period(
        self,
        _period: int,
    ) -> contract.ContractFunction:
        """See `setUnbondingPeriod` on the Autonity contract."""
        return self._contract.functions.setUnbondingPeriod(
            _period,
        )

    def set_upgrade_manager_contract(
        self,
        _address: eth_typing.ChecksumAddress,
    ) -> contract.ContractFunction:
        """See `setUpgradeManagerContract` on the Autonity contract."""
        return self._contract.functions.setUpgradeManagerContract(
            _address,
        )

    def staking_gas_price(
        self,
    ) -> int:
        """See `stakingGasPrice` on the Autonity contract."""
        return_value = self._contract.functions.stakingGasPrice().call()
        return int(return_value)

    def symbol(
        self,
    ) -> str:
        """See `symbol` on the Autonity contract."""
        return_value = self._contract.functions.symbol().call()
        return str(return_value)

    def total_supply(
        self,
    ) -> int:
        """See `totalSupply` on the Autonity contract."""
        return_value = self._contract.functions.totalSupply().call()
        return int(return_value)

    def transfer(
        self,
        _recipient: eth_typing.ChecksumAddress,
        _amount: int,
    ) -> contract.ContractFunction:
        """See `transfer` on the Autonity contract."""
        return self._contract.functions.transfer(
            _recipient,
            _amount,
        )

    def transfer_from(
        self,
        _sender: eth_typing.ChecksumAddress,
        _recipient: eth_typing.ChecksumAddress,
        _amount: int,
    ) -> contract.ContractFunction:
        """See `transferFrom` on the Autonity contract."""
        return self._contract.functions.transferFrom(
            _sender,
            _recipient,
            _amount,
        )

    def unbond(
        self,
        _validator: eth_typing.ChecksumAddress,
        _amount: int,
    ) -> contract.ContractFunction:
        """See `unbond` on the Autonity contract."""
        return self._contract.functions.unbond(
            _validator,
            _amount,
        )

    def update_enode(
        self,
        _node_address: eth_typing.ChecksumAddress,
        _enode: str,
    ) -> contract.ContractFunction:
        """See `updateEnode` on the Autonity contract."""
        return self._contract.functions.updateEnode(
            _node_address,
            _enode,
        )

    def update_validator_and_transfer_slashed_funds(
        self,
        _val: Validator,
    ) -> contract.ContractFunction:
        """See `updateValidatorAndTransferSlashedFunds` on the Autonity contract."""
        return self._contract.functions.updateValidatorAndTransferSlashedFunds(
            _val,
        )

    def upgrade_contract(
        self,
        _bytecode: hexbytes.HexBytes,
        _abi: str,
    ) -> contract.ContractFunction:
        """See `upgradeContract` on the Autonity contract."""
        return self._contract.functions.upgradeContract(
            _bytecode,
            _abi,
        )


abi = [
    {
        "inputs": [
            {
                "components": [
                    {
                        "internalType": "address payable",
                        "name": "treasury",
                        "type": "address",
                    },
                    {
                        "internalType": "address",
                        "name": "nodeAddress",
                        "type": "address",
                    },
                    {
                        "internalType": "address",
                        "name": "oracleAddress",
                        "type": "address",
                    },
                    {"internalType": "string", "name": "enode", "type": "string"},
                    {
                        "internalType": "uint256",
                        "name": "commissionRate",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "bondedStake",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "unbondingStake",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "unbondingShares",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "selfBondedStake",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "selfUnbondingStake",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "selfUnbondingShares",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "selfUnbondingStakeLocked",
                        "type": "uint256",
                    },
                    {
                        "internalType": "contract Liquid",
                        "name": "liquidContract",
                        "type": "address",
                    },
                    {
                        "internalType": "uint256",
                        "name": "liquidSupply",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "registrationBlock",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "totalSlashed",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "jailReleaseBlock",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "provableFaultCount",
                        "type": "uint256",
                    },
                    {"internalType": "bytes", "name": "consensusKey", "type": "bytes"},
                    {
                        "internalType": "enum ValidatorState",
                        "name": "state",
                        "type": "uint8",
                    },
                ],
                "internalType": "struct Autonity.Validator[]",
                "name": "_validators",
                "type": "tuple[]",
            },
            {
                "components": [
                    {
                        "components": [
                            {
                                "internalType": "uint256",
                                "name": "treasuryFee",
                                "type": "uint256",
                            },
                            {
                                "internalType": "uint256",
                                "name": "minBaseFee",
                                "type": "uint256",
                            },
                            {
                                "internalType": "uint256",
                                "name": "delegationRate",
                                "type": "uint256",
                            },
                            {
                                "internalType": "uint256",
                                "name": "unbondingPeriod",
                                "type": "uint256",
                            },
                            {
                                "internalType": "uint256",
                                "name": "initialInflationReserve",
                                "type": "uint256",
                            },
                            {
                                "internalType": "address payable",
                                "name": "treasuryAccount",
                                "type": "address",
                            },
                        ],
                        "internalType": "struct Autonity.Policy",
                        "name": "policy",
                        "type": "tuple",
                    },
                    {
                        "components": [
                            {
                                "internalType": "contract IAccountability",
                                "name": "accountabilityContract",
                                "type": "address",
                            },
                            {
                                "internalType": "contract IOracle",
                                "name": "oracleContract",
                                "type": "address",
                            },
                            {
                                "internalType": "contract IACU",
                                "name": "acuContract",
                                "type": "address",
                            },
                            {
                                "internalType": "contract ISupplyControl",
                                "name": "supplyControlContract",
                                "type": "address",
                            },
                            {
                                "internalType": "contract IStabilization",
                                "name": "stabilizationContract",
                                "type": "address",
                            },
                            {
                                "internalType": "contract UpgradeManager",
                                "name": "upgradeManagerContract",
                                "type": "address",
                            },
                            {
                                "internalType": "contract IInflationController",
                                "name": "inflationControllerContract",
                                "type": "address",
                            },
                            {
                                "internalType": "contract INonStakableVestingVault",
                                "name": "nonStakableVestingContract",
                                "type": "address",
                            },
                        ],
                        "internalType": "struct Autonity.Contracts",
                        "name": "contracts",
                        "type": "tuple",
                    },
                    {
                        "components": [
                            {
                                "internalType": "address",
                                "name": "operatorAccount",
                                "type": "address",
                            },
                            {
                                "internalType": "uint256",
                                "name": "epochPeriod",
                                "type": "uint256",
                            },
                            {
                                "internalType": "uint256",
                                "name": "blockPeriod",
                                "type": "uint256",
                            },
                            {
                                "internalType": "uint256",
                                "name": "committeeSize",
                                "type": "uint256",
                            },
                        ],
                        "internalType": "struct Autonity.Protocol",
                        "name": "protocol",
                        "type": "tuple",
                    },
                    {
                        "internalType": "uint256",
                        "name": "contractVersion",
                        "type": "uint256",
                    },
                ],
                "internalType": "struct Autonity.Config",
                "name": "_config",
                "type": "tuple",
            },
        ],
        "stateMutability": "nonpayable",
        "type": "constructor",
    },
    {"stateMutability": "payable", "type": "fallback"},
    {"stateMutability": "payable", "type": "receive"},
    {
        "anonymous": False,
        "inputs": [
            {
                "indexed": True,
                "internalType": "address",
                "name": "treasury",
                "type": "address",
            },
            {
                "indexed": True,
                "internalType": "address",
                "name": "addr",
                "type": "address",
            },
            {
                "indexed": False,
                "internalType": "uint256",
                "name": "effectiveBlock",
                "type": "uint256",
            },
        ],
        "name": "ActivatedValidator",
        "type": "event",
    },
    {
        "anonymous": False,
        "inputs": [
            {
                "indexed": True,
                "internalType": "address",
                "name": "validator",
                "type": "address",
            },
            {
                "indexed": True,
                "internalType": "address",
                "name": "delegator",
                "type": "address",
            },
            {
                "indexed": False,
                "internalType": "bool",
                "name": "selfBonded",
                "type": "bool",
            },
            {
                "indexed": False,
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256",
            },
        ],
        "name": "AppliedUnbondingReverted",
        "type": "event",
    },
    {
        "anonymous": False,
        "inputs": [
            {
                "indexed": True,
                "internalType": "address",
                "name": "owner",
                "type": "address",
            },
            {
                "indexed": True,
                "internalType": "address",
                "name": "spender",
                "type": "address",
            },
            {
                "indexed": False,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256",
            },
        ],
        "name": "Approval",
        "type": "event",
    },
    {
        "anonymous": False,
        "inputs": [
            {
                "indexed": True,
                "internalType": "address",
                "name": "validator",
                "type": "address",
            },
            {
                "indexed": True,
                "internalType": "address",
                "name": "delegator",
                "type": "address",
            },
            {
                "indexed": False,
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256",
            },
            {
                "indexed": False,
                "internalType": "enum ValidatorState",
                "name": "state",
                "type": "uint8",
            },
        ],
        "name": "BondingRejected",
        "type": "event",
    },
    {
        "anonymous": False,
        "inputs": [
            {
                "indexed": True,
                "internalType": "address",
                "name": "validator",
                "type": "address",
            },
            {
                "indexed": True,
                "internalType": "address",
                "name": "delegator",
                "type": "address",
            },
            {
                "indexed": False,
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256",
            },
        ],
        "name": "BondingReverted",
        "type": "event",
    },
    {
        "anonymous": False,
        "inputs": [
            {
                "indexed": True,
                "internalType": "address",
                "name": "addr",
                "type": "address",
            },
            {
                "indexed": False,
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256",
            },
        ],
        "name": "BurnedStake",
        "type": "event",
    },
    {
        "inputs": [],
        "name": "COMMISSION_RATE_PRECISION",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "anonymous": False,
        "inputs": [
            {
                "indexed": True,
                "internalType": "address",
                "name": "validator",
                "type": "address",
            },
            {
                "indexed": False,
                "internalType": "uint256",
                "name": "rate",
                "type": "uint256",
            },
        ],
        "name": "CommissionRateChange",
        "type": "event",
    },
    {
        "anonymous": False,
        "inputs": [
            {
                "indexed": False,
                "internalType": "uint256",
                "name": "period",
                "type": "uint256",
            }
        ],
        "name": "EpochPeriodUpdated",
        "type": "event",
    },
    {
        "anonymous": False,
        "inputs": [
            {
                "indexed": False,
                "internalType": "uint256",
                "name": "gasPrice",
                "type": "uint256",
            }
        ],
        "name": "MinimumBaseFeeUpdated",
        "type": "event",
    },
    {
        "anonymous": False,
        "inputs": [
            {
                "indexed": True,
                "internalType": "address",
                "name": "addr",
                "type": "address",
            },
            {
                "indexed": False,
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256",
            },
        ],
        "name": "MintedStake",
        "type": "event",
    },
    {
        "anonymous": False,
        "inputs": [
            {
                "indexed": True,
                "internalType": "address",
                "name": "validator",
                "type": "address",
            },
            {
                "indexed": True,
                "internalType": "address",
                "name": "delegator",
                "type": "address",
            },
            {
                "indexed": False,
                "internalType": "bool",
                "name": "selfBonded",
                "type": "bool",
            },
            {
                "indexed": False,
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256",
            },
        ],
        "name": "NewBondingRequest",
        "type": "event",
    },
    {
        "anonymous": False,
        "inputs": [
            {
                "indexed": False,
                "internalType": "uint256",
                "name": "epoch",
                "type": "uint256",
            }
        ],
        "name": "NewEpoch",
        "type": "event",
    },
    {
        "anonymous": False,
        "inputs": [
            {
                "indexed": True,
                "internalType": "address",
                "name": "validator",
                "type": "address",
            },
            {
                "indexed": True,
                "internalType": "address",
                "name": "delegator",
                "type": "address",
            },
            {
                "indexed": False,
                "internalType": "bool",
                "name": "selfBonded",
                "type": "bool",
            },
            {
                "indexed": False,
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256",
            },
        ],
        "name": "NewUnbondingRequest",
        "type": "event",
    },
    {
        "anonymous": False,
        "inputs": [
            {
                "indexed": True,
                "internalType": "address",
                "name": "treasury",
                "type": "address",
            },
            {
                "indexed": True,
                "internalType": "address",
                "name": "addr",
                "type": "address",
            },
            {
                "indexed": False,
                "internalType": "uint256",
                "name": "effectiveBlock",
                "type": "uint256",
            },
        ],
        "name": "PausedValidator",
        "type": "event",
    },
    {
        "anonymous": False,
        "inputs": [
            {
                "indexed": False,
                "internalType": "address",
                "name": "treasury",
                "type": "address",
            },
            {
                "indexed": False,
                "internalType": "address",
                "name": "addr",
                "type": "address",
            },
            {
                "indexed": False,
                "internalType": "address",
                "name": "oracleAddress",
                "type": "address",
            },
            {
                "indexed": False,
                "internalType": "string",
                "name": "enode",
                "type": "string",
            },
            {
                "indexed": False,
                "internalType": "address",
                "name": "liquidContract",
                "type": "address",
            },
        ],
        "name": "RegisteredValidator",
        "type": "event",
    },
    {
        "anonymous": False,
        "inputs": [
            {
                "indexed": True,
                "internalType": "address",
                "name": "validator",
                "type": "address",
            },
            {
                "indexed": True,
                "internalType": "address",
                "name": "delegator",
                "type": "address",
            },
            {
                "indexed": False,
                "internalType": "bool",
                "name": "selfBonded",
                "type": "bool",
            },
            {
                "indexed": False,
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256",
            },
        ],
        "name": "ReleasedUnbondingReverted",
        "type": "event",
    },
    {
        "anonymous": False,
        "inputs": [
            {
                "indexed": True,
                "internalType": "address",
                "name": "addr",
                "type": "address",
            },
            {
                "indexed": False,
                "internalType": "uint256",
                "name": "atnAmount",
                "type": "uint256",
            },
            {
                "indexed": False,
                "internalType": "uint256",
                "name": "ntnAmount",
                "type": "uint256",
            },
        ],
        "name": "Rewarded",
        "type": "event",
    },
    {
        "anonymous": False,
        "inputs": [
            {
                "indexed": True,
                "internalType": "address",
                "name": "from",
                "type": "address",
            },
            {
                "indexed": True,
                "internalType": "address",
                "name": "to",
                "type": "address",
            },
            {
                "indexed": False,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256",
            },
        ],
        "name": "Transfer",
        "type": "event",
    },
    {
        "anonymous": False,
        "inputs": [
            {
                "indexed": True,
                "internalType": "address",
                "name": "validator",
                "type": "address",
            },
            {
                "indexed": True,
                "internalType": "address",
                "name": "delegator",
                "type": "address",
            },
            {
                "indexed": False,
                "internalType": "bool",
                "name": "selfBonded",
                "type": "bool",
            },
            {
                "indexed": False,
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256",
            },
        ],
        "name": "UnbondingRejected",
        "type": "event",
    },
    {
        "anonymous": False,
        "inputs": [
            {
                "indexed": False,
                "internalType": "uint256",
                "name": "epochTime",
                "type": "uint256",
            }
        ],
        "name": "UnlockingScheduleFailed",
        "type": "event",
    },
    {
        "inputs": [{"internalType": "address", "name": "_address", "type": "address"}],
        "name": "activateValidator",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [
            {"internalType": "address", "name": "owner", "type": "address"},
            {"internalType": "address", "name": "spender", "type": "address"},
        ],
        "name": "allowance",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [
            {"internalType": "address", "name": "spender", "type": "address"},
            {"internalType": "uint256", "name": "amount", "type": "uint256"},
        ],
        "name": "approve",
        "outputs": [{"internalType": "bool", "name": "", "type": "bool"}],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "atnTotalRedistributed",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [{"internalType": "address", "name": "_addr", "type": "address"}],
        "name": "balanceOf",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [
            {"internalType": "address", "name": "_validator", "type": "address"},
            {"internalType": "uint256", "name": "_amount", "type": "uint256"},
        ],
        "name": "bond",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "payable",
        "type": "function",
    },
    {
        "inputs": [
            {"internalType": "address", "name": "_addr", "type": "address"},
            {"internalType": "uint256", "name": "_amount", "type": "uint256"},
        ],
        "name": "burn",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [
            {"internalType": "address", "name": "_validator", "type": "address"},
            {"internalType": "uint256", "name": "_rate", "type": "uint256"},
        ],
        "name": "changeCommissionRate",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "completeContractUpgrade",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "computeCommittee",
        "outputs": [{"internalType": "address[]", "name": "", "type": "address[]"}],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "config",
        "outputs": [
            {
                "components": [
                    {
                        "internalType": "uint256",
                        "name": "treasuryFee",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "minBaseFee",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "delegationRate",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "unbondingPeriod",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "initialInflationReserve",
                        "type": "uint256",
                    },
                    {
                        "internalType": "address payable",
                        "name": "treasuryAccount",
                        "type": "address",
                    },
                ],
                "internalType": "struct Autonity.Policy",
                "name": "policy",
                "type": "tuple",
            },
            {
                "components": [
                    {
                        "internalType": "contract IAccountability",
                        "name": "accountabilityContract",
                        "type": "address",
                    },
                    {
                        "internalType": "contract IOracle",
                        "name": "oracleContract",
                        "type": "address",
                    },
                    {
                        "internalType": "contract IACU",
                        "name": "acuContract",
                        "type": "address",
                    },
                    {
                        "internalType": "contract ISupplyControl",
                        "name": "supplyControlContract",
                        "type": "address",
                    },
                    {
                        "internalType": "contract IStabilization",
                        "name": "stabilizationContract",
                        "type": "address",
                    },
                    {
                        "internalType": "contract UpgradeManager",
                        "name": "upgradeManagerContract",
                        "type": "address",
                    },
                    {
                        "internalType": "contract IInflationController",
                        "name": "inflationControllerContract",
                        "type": "address",
                    },
                    {
                        "internalType": "contract INonStakableVestingVault",
                        "name": "nonStakableVestingContract",
                        "type": "address",
                    },
                ],
                "internalType": "struct Autonity.Contracts",
                "name": "contracts",
                "type": "tuple",
            },
            {
                "components": [
                    {
                        "internalType": "address",
                        "name": "operatorAccount",
                        "type": "address",
                    },
                    {
                        "internalType": "uint256",
                        "name": "epochPeriod",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "blockPeriod",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "committeeSize",
                        "type": "uint256",
                    },
                ],
                "internalType": "struct Autonity.Protocol",
                "name": "protocol",
                "type": "tuple",
            },
            {"internalType": "uint256", "name": "contractVersion", "type": "uint256"},
        ],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "decimals",
        "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}],
        "stateMutability": "pure",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "deployer",
        "outputs": [{"internalType": "address", "name": "", "type": "address"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "epochID",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "epochReward",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "epochTotalBondedStake",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "finalize",
        "outputs": [
            {"internalType": "bool", "name": "", "type": "bool"},
            {
                "components": [
                    {"internalType": "address", "name": "addr", "type": "address"},
                    {
                        "internalType": "uint256",
                        "name": "votingPower",
                        "type": "uint256",
                    },
                    {"internalType": "bytes", "name": "consensusKey", "type": "bytes"},
                ],
                "internalType": "struct Autonity.CommitteeMember[]",
                "name": "",
                "type": "tuple[]",
            },
        ],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "finalizeInitialization",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "getBlockPeriod",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "getCommittee",
        "outputs": [
            {
                "components": [
                    {"internalType": "address", "name": "addr", "type": "address"},
                    {
                        "internalType": "uint256",
                        "name": "votingPower",
                        "type": "uint256",
                    },
                    {"internalType": "bytes", "name": "consensusKey", "type": "bytes"},
                ],
                "internalType": "struct Autonity.CommitteeMember[]",
                "name": "",
                "type": "tuple[]",
            }
        ],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "getCommitteeEnodes",
        "outputs": [{"internalType": "string[]", "name": "", "type": "string[]"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [{"internalType": "uint256", "name": "_block", "type": "uint256"}],
        "name": "getEpochFromBlock",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "getEpochPeriod",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "getLastEpochBlock",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "getMaxCommitteeSize",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "getMinimumBaseFee",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "getNewContract",
        "outputs": [
            {"internalType": "bytes", "name": "", "type": "bytes"},
            {"internalType": "string", "name": "", "type": "string"},
        ],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "getOperator",
        "outputs": [{"internalType": "address", "name": "", "type": "address"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "getOracle",
        "outputs": [{"internalType": "address", "name": "", "type": "address"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [
            {"internalType": "uint256", "name": "height", "type": "uint256"},
            {"internalType": "uint256", "name": "round", "type": "uint256"},
        ],
        "name": "getProposer",
        "outputs": [{"internalType": "address", "name": "", "type": "address"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [
            {"internalType": "uint256", "name": "_unbondingID", "type": "uint256"}
        ],
        "name": "getRevertingAmount",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "getTreasuryAccount",
        "outputs": [{"internalType": "address", "name": "", "type": "address"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "getTreasuryFee",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "getUnbondingPeriod",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [
            {"internalType": "uint256", "name": "_unbondingID", "type": "uint256"}
        ],
        "name": "getUnbondingReleaseState",
        "outputs": [
            {
                "internalType": "enum Autonity.UnbondingReleaseState",
                "name": "",
                "type": "uint8",
            }
        ],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [{"internalType": "address", "name": "_addr", "type": "address"}],
        "name": "getValidator",
        "outputs": [
            {
                "components": [
                    {
                        "internalType": "address payable",
                        "name": "treasury",
                        "type": "address",
                    },
                    {
                        "internalType": "address",
                        "name": "nodeAddress",
                        "type": "address",
                    },
                    {
                        "internalType": "address",
                        "name": "oracleAddress",
                        "type": "address",
                    },
                    {"internalType": "string", "name": "enode", "type": "string"},
                    {
                        "internalType": "uint256",
                        "name": "commissionRate",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "bondedStake",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "unbondingStake",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "unbondingShares",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "selfBondedStake",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "selfUnbondingStake",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "selfUnbondingShares",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "selfUnbondingStakeLocked",
                        "type": "uint256",
                    },
                    {
                        "internalType": "contract Liquid",
                        "name": "liquidContract",
                        "type": "address",
                    },
                    {
                        "internalType": "uint256",
                        "name": "liquidSupply",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "registrationBlock",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "totalSlashed",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "jailReleaseBlock",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "provableFaultCount",
                        "type": "uint256",
                    },
                    {"internalType": "bytes", "name": "consensusKey", "type": "bytes"},
                    {
                        "internalType": "enum ValidatorState",
                        "name": "state",
                        "type": "uint8",
                    },
                ],
                "internalType": "struct Autonity.Validator",
                "name": "",
                "type": "tuple",
            }
        ],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "getValidators",
        "outputs": [{"internalType": "address[]", "name": "", "type": "address[]"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "getVersion",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "inflationReserve",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "lastEpochBlock",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "lastEpochTime",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "maxBondAppliedGas",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "maxRewardsDistributionGas",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "maxUnbondAppliedGas",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "maxUnbondReleasedGas",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [
            {"internalType": "address", "name": "_addr", "type": "address"},
            {"internalType": "uint256", "name": "_amount", "type": "uint256"},
        ],
        "name": "mint",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "name",
        "outputs": [{"internalType": "string", "name": "", "type": "string"}],
        "stateMutability": "pure",
        "type": "function",
    },
    {
        "inputs": [{"internalType": "address", "name": "_address", "type": "address"}],
        "name": "pauseValidator",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "receiveATN",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function",
    },
    {
        "inputs": [
            {"internalType": "string", "name": "_enode", "type": "string"},
            {"internalType": "address", "name": "_oracleAddress", "type": "address"},
            {"internalType": "bytes", "name": "_consensusKey", "type": "bytes"},
            {"internalType": "bytes", "name": "_signatures", "type": "bytes"},
        ],
        "name": "registerValidator",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "resetContractUpgrade",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [
            {
                "internalType": "contract IAccountability",
                "name": "_address",
                "type": "address",
            }
        ],
        "name": "setAccountabilityContract",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [
            {"internalType": "contract IACU", "name": "_address", "type": "address"}
        ],
        "name": "setAcuContract",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [{"internalType": "uint256", "name": "_size", "type": "uint256"}],
        "name": "setCommitteeSize",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [{"internalType": "uint256", "name": "_period", "type": "uint256"}],
        "name": "setEpochPeriod",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [
            {
                "internalType": "contract IInflationController",
                "name": "_address",
                "type": "address",
            }
        ],
        "name": "setInflationControllerContract",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [{"internalType": "uint256", "name": "_gas", "type": "uint256"}],
        "name": "setMaxBondAppliedGas",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [{"internalType": "uint256", "name": "_gas", "type": "uint256"}],
        "name": "setMaxRewardsDistributionGas",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [{"internalType": "uint256", "name": "_gas", "type": "uint256"}],
        "name": "setMaxUnbondAppliedGas",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [{"internalType": "uint256", "name": "_gas", "type": "uint256"}],
        "name": "setMaxUnbondReleasedGas",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [{"internalType": "uint256", "name": "_price", "type": "uint256"}],
        "name": "setMinimumBaseFee",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [
            {
                "internalType": "contract INonStakableVestingVault",
                "name": "_address",
                "type": "address",
            }
        ],
        "name": "setNonStakableVestingContract",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [{"internalType": "address", "name": "_account", "type": "address"}],
        "name": "setOperatorAccount",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [
            {"internalType": "address payable", "name": "_address", "type": "address"}
        ],
        "name": "setOracleContract",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [
            {
                "internalType": "contract IStabilization",
                "name": "_address",
                "type": "address",
            }
        ],
        "name": "setStabilizationContract",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [{"internalType": "uint256", "name": "_price", "type": "uint256"}],
        "name": "setStakingGasPrice",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [
            {
                "internalType": "contract ISupplyControl",
                "name": "_address",
                "type": "address",
            }
        ],
        "name": "setSupplyControlContract",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [
            {"internalType": "address payable", "name": "_account", "type": "address"}
        ],
        "name": "setTreasuryAccount",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [
            {"internalType": "uint256", "name": "_treasuryFee", "type": "uint256"}
        ],
        "name": "setTreasuryFee",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [{"internalType": "uint256", "name": "_period", "type": "uint256"}],
        "name": "setUnbondingPeriod",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [
            {
                "internalType": "contract UpgradeManager",
                "name": "_address",
                "type": "address",
            }
        ],
        "name": "setUpgradeManagerContract",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "stakingGasPrice",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "symbol",
        "outputs": [{"internalType": "string", "name": "", "type": "string"}],
        "stateMutability": "pure",
        "type": "function",
    },
    {
        "inputs": [],
        "name": "totalSupply",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [
            {"internalType": "address", "name": "_recipient", "type": "address"},
            {"internalType": "uint256", "name": "_amount", "type": "uint256"},
        ],
        "name": "transfer",
        "outputs": [{"internalType": "bool", "name": "", "type": "bool"}],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [
            {"internalType": "address", "name": "_sender", "type": "address"},
            {"internalType": "address", "name": "_recipient", "type": "address"},
            {"internalType": "uint256", "name": "_amount", "type": "uint256"},
        ],
        "name": "transferFrom",
        "outputs": [{"internalType": "bool", "name": "", "type": "bool"}],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [
            {"internalType": "address", "name": "_validator", "type": "address"},
            {"internalType": "uint256", "name": "_amount", "type": "uint256"},
        ],
        "name": "unbond",
        "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
        "stateMutability": "payable",
        "type": "function",
    },
    {
        "inputs": [
            {"internalType": "address", "name": "_nodeAddress", "type": "address"},
            {"internalType": "string", "name": "_enode", "type": "string"},
        ],
        "name": "updateEnode",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [
            {
                "components": [
                    {
                        "internalType": "address payable",
                        "name": "treasury",
                        "type": "address",
                    },
                    {
                        "internalType": "address",
                        "name": "nodeAddress",
                        "type": "address",
                    },
                    {
                        "internalType": "address",
                        "name": "oracleAddress",
                        "type": "address",
                    },
                    {"internalType": "string", "name": "enode", "type": "string"},
                    {
                        "internalType": "uint256",
                        "name": "commissionRate",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "bondedStake",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "unbondingStake",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "unbondingShares",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "selfBondedStake",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "selfUnbondingStake",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "selfUnbondingShares",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "selfUnbondingStakeLocked",
                        "type": "uint256",
                    },
                    {
                        "internalType": "contract Liquid",
                        "name": "liquidContract",
                        "type": "address",
                    },
                    {
                        "internalType": "uint256",
                        "name": "liquidSupply",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "registrationBlock",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "totalSlashed",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "jailReleaseBlock",
                        "type": "uint256",
                    },
                    {
                        "internalType": "uint256",
                        "name": "provableFaultCount",
                        "type": "uint256",
                    },
                    {"internalType": "bytes", "name": "consensusKey", "type": "bytes"},
                    {
                        "internalType": "enum ValidatorState",
                        "name": "state",
                        "type": "uint8",
                    },
                ],
                "internalType": "struct Autonity.Validator",
                "name": "_val",
                "type": "tuple",
            }
        ],
        "name": "updateValidatorAndTransferSlashedFunds",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
    {
        "inputs": [
            {"internalType": "bytes", "name": "_bytecode", "type": "bytes"},
            {"internalType": "string", "name": "_abi", "type": "string"},
        ],
        "name": "upgradeContract",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
    },
]
